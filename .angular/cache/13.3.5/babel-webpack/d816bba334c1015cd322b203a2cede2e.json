{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Lesner Villega\\\\Documents\\\\BinarycodeLA\\\\Verblio_Dev_Take_Home_Project\\\\FrontEnd_Engineering_challenge\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {\n    this.isLogin = false;\n  }\n\n  login(username, password) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        try {\n          if (password == \"test\" && username == \"test@test.com\") {\n            _this.isLogin = true;\n            resolve(true);\n          } else {\n            _this.isLogin = false;\n            reject(false);\n          }\n        } catch (error) {\n          reject(false);\n          console.log(\"error=> \", error);\n        }\n      }).catch(err => {\n        console.log(\"error login=> \", err);\n      });\n    })();\n  }\n\n  isLoggedIn() {\n    if (localStorage.getItem(\"token\") != null) return true;else return false;\n  }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n  }\n\n}\n\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)();\n};\n\nAuthenticationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Lesner Villega/Documents/BinarycodeLA/Verblio_Dev_Take_Home_Project/FrontEnd_Engineering_challenge/src/app/_services/authentication.service.ts"],"names":["i0","AuthenticationService","constructor","isLogin","login","username","password","Promise","resolve","reject","error","console","log","catch","err","isLoggedIn","localStorage","getItem","logout","removeItem","ɵfac","AuthenticationService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,qBAAN,CAA4B;AAC/BC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,KAAf;AACH;;AACKC,EAAAA,KAAK,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAA;;AAAA;AAC5B,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAI;AACA,cAAIH,QAAQ,IAAI,MAAZ,IAAsBD,QAAQ,IAAI,eAAtC,EAAuD;AACnD,YAAA,KAAI,CAACF,OAAL,GAAe,IAAf;AACAK,YAAAA,OAAO,CAAC,IAAD,CAAP;AACH,WAHD,MAIK;AACD,YAAA,KAAI,CAACL,OAAL,GAAe,KAAf;AACAM,YAAAA,MAAM,CAAC,KAAD,CAAN;AACH;AACJ,SATD,CAUA,OAAOC,KAAP,EAAc;AACVD,UAAAA,MAAM,CAAC,KAAD,CAAN;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACH;AACJ,OAfM,EAeJG,KAfI,CAeGC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,GAA9B;AACH,OAjBM,CAAP;AAD4B;AAmB/B;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAArC,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP;;AACDC,EAAAA,MAAM,GAAG;AACLF,IAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB;AACH;;AAhC8B;;AAkCnClB,qBAAqB,CAACmB,IAAtB,GAA6B,SAASC,6BAAT,CAAuCC,CAAvC,EAA0C;AAAE,SAAO,KAAKA,CAAC,IAAIrB,qBAAV,GAAP;AAA4C,CAArH;;AACAA,qBAAqB,CAACsB,KAAtB,GAA8B,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAExB,qBAAT;AAAgCyB,EAAAA,OAAO,EAAEzB,qBAAqB,CAACmB,IAA/D;AAAqEO,EAAAA,UAAU,EAAE;AAAjF,CAAtB,CAA5C","sourcesContent":["import * as i0 from \"@angular/core\";\r\nexport class AuthenticationService {\r\n    constructor() {\r\n        this.isLogin = false;\r\n    }\r\n    async login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                if (password == \"test\" && username == \"test@test.com\") {\r\n                    this.isLogin = true;\r\n                    resolve(true);\r\n                }\r\n                else {\r\n                    this.isLogin = false;\r\n                    reject(false);\r\n                }\r\n            }\r\n            catch (error) {\r\n                reject(false);\r\n                console.log(\"error=> \", error);\r\n            }\r\n        }).catch((err) => {\r\n            console.log(\"error login=> \", err);\r\n        });\r\n    }\r\n    isLoggedIn() {\r\n        if (localStorage.getItem(\"token\") != null)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    logout() {\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n}\r\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) { return new (t || AuthenticationService)(); };\r\nAuthenticationService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthenticationService, factory: AuthenticationService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}